<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>markdown语法学习</title>
    <url>/2023/05/01/3_markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>关于markdown语法的笔记。</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure>

<p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em><br><em><strong>粗斜体文本</strong></em></p>
<p>代码块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello Markdown\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br>注：表格前后需要空出一行<br>这是表格</p>
<table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单</td>
<td align="right">元</td>
<td align="center">格</td>
</tr>
<tr>
<td align="left">单</td>
<td align="right">元</td>
<td align="center">格</td>
</tr>
</tbody></table>
<p>左右两侧”|”可以去除</p>
<table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单</td>
<td align="right">元</td>
<td align="center">格</td>
</tr>
<tr>
<td align="left">单</td>
<td align="right">元</td>
<td align="center">格</td>
</tr>
</tbody></table>
<p>1.<a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80">链接名称</a><br>例如<a href="https://我的博客.github.io/">这是名字，不显示地址</a><br>2.&lt;链接地址&gt;<br><a href="https://我的博客.github.io/">https://我的博客.github.io/</a><br>直接显示链接</p>
<p>公式（使用$\KaTeX$渲染）<br>行内公式：$E&#x3D;mc^2$.<br>行间公式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$\int_&#123;a&#125;^&#123;b&#125;f(x)dx$$ </span><br><span class="line">$$\oiint_&#123;D&#125;f(x,y)dxdy$$  # 网页似乎不支持</span><br><span class="line">$$\iint_&#123;D&#125;f(x,y)dxdy$$</span><br><span class="line">$$\iiint_&#123;V&#125;f(x,y,z)dxdydz$$</span><br></pre></td></tr></table></figure>
<p>$$\int_{a}^{b}f(x)dx$$<br>$$\oiint_{D}f(x,y)dxdy$$<br>$$\iint_{D}f(x,y)dxdy$$<br>$$\iiint_{V}f(x,y,z)dxdydz$$</p>
]]></content>
      <categories>
        <category>3</category>
      </categories>
      <tags>
        <tag>2</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建与基础配置</title>
    <url>/2023/04/29/1_%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>第一次尝试搭建个人博客。<br>本博客使用<a href="https://www.bilibili.com/video/BV1ts4y1f7Gu">b站教程</a>，<a href="https://hexo.io/zh-cn/index.html">hexo</a>开源项目，以及<a href="https://shen-yu.gitee.io/2019/ayer/">ayer</a>主题。<br>具体流程：下载<a href="https://git-scm.com/">git</a>，<a href="https://nodejs.org/zh-cn/">node.js</a></p>
<span id="more"></span>

<h3 id="1-git、hexo、node-js环境搭建"><a href="#1-git、hexo、node-js环境搭建" class="headerlink" title="1.git、hexo、node.js环境搭建"></a>1.git、hexo、node.js环境搭建</h3><p>下载<a href="https://git-scm.com/">git</a>，<a href="https://nodejs.org/zh-cn/">Node.js</a>。<br>git下载完毕后，在cmd窗口中输入<code>node-v</code>查看版本号，如果出现版本号，则说明安装成功。<br>新建一个下载hexo的文件夹，进入后右键选择git bash打开git窗口，分别输入<a href="https://hexo.io/zh-cn/index.html">hexo官网</a>的命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1下载</span><br><span class="line">npm install hexo-cli -g </span><br><span class="line"># 2初始化博客，运行完毕会出现blog文件夹</span><br><span class="line">hexo init blog</span><br><span class="line"># 3进入博客</span><br><span class="line">cd blog</span><br><span class="line"># 4下载 </span><br><span class="line">npm install</span><br><span class="line"># 5运行博客（为原始版本、默认主题，之后可以下载其他主题）</span><br><span class="line">hexo server </span><br></pre></td></tr></table></figure>


<h3 id="2-hexo与hexo主题下载"><a href="#2-hexo与hexo主题下载" class="headerlink" title="2.hexo与hexo主题下载"></a>2.hexo与hexo主题下载</h3><p><a href="https://hexo.io/zh-cn/index.html">hexo</a>，<a href="https://shen-yu.gitee.io/2019/ayer/">ayer</a>主题。</p>
<h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h3><p>修改<code>config.yml</code>与<code>config.ayer.yml</code>中的具体配置<br>插件详见下一篇文章。</p>
]]></content>
      <categories>
        <category>1</category>
      </categories>
      <tags>
        <tag>1</tag>
      </tags>
  </entry>
  <entry>
    <title>代码块</title>
    <url>/2023/05/02/4_test/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>关于hexo中代码块与代码高亮的笔记。</p>
<span id="more"></span>

<h3 id="第一种写法：代码块"><a href="#第一种写法：代码块" class="headerlink" title="第一种写法：代码块"></a>第一种写法：代码块</h3><p>缺点是并不会在markdown中被渲染。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class="line">code snippet # 注意，写代码时不用加上方括号[]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code snippet</span><br></pre></td></tr></table></figure>

<h3 id="第二种写法：反引号代码块"><a href="#第二种写法：反引号代码块" class="headerlink" title="第二种写法：反引号代码块"></a>第二种写法：反引号代码块</h3><p>此方法在markdown中也会被渲染，极力推荐。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\``` [language] [title] [url] [link text] [additional options]</span><br><span class="line">code snippet # 注意，写代码时要去除反义符号“\”，并且不用加上方括号[]</span><br><span class="line">\```</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code snippet</span><br></pre></td></tr></table></figure>

<h3 id="实例测试"><a href="#实例测试" class="headerlink" title="实例测试"></a>实例测试</h3><p>python</p>
<figure class="highlight python"><figcaption><span>python高亮</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    s = s+<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>c++</p>
<figure class="highlight c++"><figcaption><span>c++高亮</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello Markdown\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>url &#x3D; <a href="https://www.bilibili.com/">https://www.bilibili.com/</a></p>
]]></content>
      <categories>
        <category>3</category>
      </categories>
      <tags>
        <tag>2</tag>
      </tags>
  </entry>
  <entry>
    <title>testimage</title>
    <url>/2023/05/11/testimage/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>testimage</p>
<span id="more"></span>
<p>本文title属性testimage<br>通过html的<code>&lt;img&gt;</code>方法引用时，路径格式为&#x2F;path1&#x2F;path2&#x2F;file.format</p>
<p>1、下载hexo-renderer-marked插件后，使用<code>hexo new</code>创建文件后，会生成与文章同名、处在同一级目录中的资源文件夹，用markdown语法引用图片<code>![1](1.png)</code>则会自动解析文件路径，但是在markdown语法编辑器中，如果不跳帧默认路径，则不会体现（比如vscode）<br><img src="/2023/05/11/testimage/1.png" alt="1-1"><br><img src="D:///hexo/blog/source/_posts/testimage/1.png" alt="1-2"><br><img src="/2023/05/11/testimage/hexo/blog/source/_posts/testimage/1.png" alt="1-3"><br><img src="/2023/05/11/testimage/1.png" alt="1-4"><br><img src="/2023/05/11/testimage/1.png" alt="1-5"></p>
<p>2、使用html格式引用本地文件（与md文件同级的文件夹），在markdown中支持，但是hexo中不知道为什么不支持。注意引用时，路径的连接使用“&#x2F;”而不是“\”。并且，可能在盘路径“：”后，需要加三个斜杠&#x2F;&#x2F;&#x2F;<br>D:\hexo\blog\source_posts\testimage<br><img src="D:///hexo/blog/source/_posts/testimage/2.png" alt="2-1"><br><img src="/2023/05/11/testimage/hexo/blog/source/_posts/testimage/2.png" alt="2-2"></p>
<img src="d///hexo/blog/source/_posts/testimage/2.png" alt="2-3">
<img src="/2023/05/11/testimage/hexo/blog/source/_posts/testimage/2.png" alt="2-4">

<img src="/2023/05/11/testimage/blog/source/_posts/testimage/2.png" alt="2-5">
<img src="/2023/05/11/testimage/source/_posts/testimage/2.png" alt="2-6">
<img src="/2023/05/11/testimage/_posts/testimage/2.png" alt="2-7">
<img src="/2023/05/11/testimage/testimage/2.png" alt="2-8">
<img src="/2023/05/11/testimage/2.png" alt="2-9">
<img src="/2023/05/11/testimage/2.png" alt="2-10">
<img src="/2023/05/11/testimage/2.png" alt="2-11">
网页上2-11可以显示，看来hexo-renderer-marked插件开启后默认在生成的、与md文件同级的资源文件夹中调用。markdown中2-9可以显示

<p>3、使用标签插件，在资源文件夹(asset)中引用图片，在markdown中无法显示，且无法调整大小。然而似乎在hexo中也不适用</p>


<p>4、使用html格式引用本地文件（存放在source文件夹的images目录下）<br>D:\hexo\blog\source\images<br><img src="D:///hexo/blog/source/images/4.png" alt="4-1"><br><img src="D:/hexo/blog/source/images/4.png" alt="4-2"><br><img src="/hexo/blog/source/images/4.png" alt="4-3"><br><img src="/blog/source/images/4.png" alt="4-4"><br><img src="/source/images/4.png" alt="4-5"><br><img src="/images/4.png" alt="4-6"><br><img src="/2023/05/11/testimage/4.png" alt="4-7"><br><img src="/2023/05/11/testimage/4.png" alt="4-8"><br><img src="D:/hexo/blog/source/images/4.png" alt="4"></p>
<p>markdown中均无法显示，而hexo网页中只有4-6可以显示。</p>
]]></content>
  </entry>
  <entry>
    <title>hexo图片引用测试</title>
    <url>/2023/05/01/5_hexo%20image%20quatation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>hexo图片引用测试</p>
<span id="more"></span>
<p>hexo图片引用是比较复杂的。引用图床（url）格式的图片还好，文件路径写相应的url就行，但是引用本地文件时择总是出问题。<br>
解决方法：下载插件<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>。<br>
在git bash中输入<code>$ npm install hexo-renderer-marked --save</code>进行下载<br>
依据github说明配置<code>config.yml</code>文件即可<br>
这里推荐以<code>&lt;img src=&quot;relative path&quot; alt=&quot;title&quot; width=&quot;50%&quot;&gt;</code>的html格式进行配置，这样既能在本地markdown编辑器的预览页中看到，又可以在网站中显示，还能调整标题与大小。<br>
注意，relative path指的是相对路径，例如文章的md文件路径<code>D:/hexo/blog/source/_posts</code>，图片路径<code>D:/hexo/blog/source/_posts/image_example/img.png</code>，那么相对路径为<code>/image_example/img.png</code></p>
<p>下面进行测试：</p>
<h1>1 html格式进行引用</h1>
<p>第一种方式（相对路径）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/5_hexo image quatation/LaTeX_logo.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;LaTeX logo1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;70&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下（markdown中可以显示，且网页中能显示，极力推荐）：<br>
<img src="/2023/05/01/5_hexo%20image%20quatation/LaTeX_logo.svg" alt="LaTeX logo1" width="70"><br>
width的值决定图片宽度。1000=100%，70=7%，数字与百分之可以互相转换，且长宽比保持不变。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;LaTeX_logo.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;LaTeX logo2&quot;</span> <span class="attr">width</span>=<span class="string">&quot;70&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<br>
<p>第二种方式（hexo-renderer-marked使文件路径默认解析至资源文件夹）：<br>
效果如下（markdown中不能显示，但网页中能显示）：<br>
<img src="/2023/05/01/5_hexo%20image%20quatation/LaTeX_logo.svg" alt="LaTeX logo2" width="70"></p>
<p>第三种方式：<br>
使用markdown语法（由hexo-renderer-marked插件支持）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">LaTeX logo3</span>](<span class="link">LaTeX_logo.svg</span>)</span><br></pre></td></tr></table></figure>
<p>效果如下（markdown中不能显示，但网页中能显示，且调整不了大小）：<br>
<img src="/2023/05/01/5_hexo%20image%20quatation/LaTeX_logo.svg" alt="LaTeX logo3"></p>
<h1>2 url格式引用</h1>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://katex.org/img/katex-logo-black.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;KaTeX logo&quot;</span> <span class="attr">width</span>=<span class="string">&quot;70&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果如下（markdown中可以显示，且网页中能显示）：<br>
<img src="https://katex.org/img/katex-logo-black.svg" alt="KaTeX logo" width="70"></p>
]]></content>
      <categories>
        <category>2</category>
      </categories>
      <tags>
        <tag>1</tag>
      </tags>
  </entry>
</search>
